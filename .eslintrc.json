{
  // Configuration for JavaScript files
  "extends": "next/core-web-vitals",
  "rules": {
    "prettier/prettier": [
      "error",
      {
        "singleQuote": true,
        "endOfLine": "auto"
      }
    ]
  },
  "overrides": [
    // Configuration for TypeScript files
    {
      "files": ["**/*.ts", "**/*.tsx"],
      "plugins": ["@typescript-eslint", "unused-imports", "simple-import-sort"],
      "extends": ["next/core-web-vitals", "plugin:prettier/recommended"],
      "parserOptions": {
        "project": "./tsconfig.json"
      },
      "rules": {
        "prettier/prettier": [
          "error",
          {
            "singleQuote": true,
            "endOfLine": "auto"
          }
        ],
        "jsx-a11y/no-noninteractive-tabindex": "off",
        // Fix issue with redux state
        "no-param-reassign": ["error", { "props": false }],
        // Avoid missing file extension errors, TypeScript already provides a similar feature
        "react/function-component-definition": "off",
        // Vscode doesn't support automatically destructuring, it's a pain to add a new variable
        "react/require-default-props": "off",
        // Allow non-defined react props as undefined
        "react/jsx-props-no-spreading": "off",
        // _app.tsx uses spread operator and also, react-hook-form
        "@typescript-eslint/comma-dangle": "off",
        // Avoid conflict rule between Eslint and Prettier
        "@typescript-eslint/consistent-type-imports": "error",
        // Ensure `import type` is used when it's necessary
        "no-restricted-syntax": ["error", "ForInStatement", "LabeledStatement", "WithStatement"],
        // Named export is easier to refactor automatically
        "simple-import-sort/imports": "error",
        // Import configuration for `eslint-plugin-simple-import-sort`
        "simple-import-sort/exports": "error",
        // Export configuration for `eslint-plugin-simple-import-sort`
        "import/order": "off",
        // Avoid conflict rule between `eslint-plugin-import` and `eslint-plugin-simple-import-sort`
        "@typescript-eslint/no-unused-vars": "off",
        "unused-imports/no-unused-imports": "error",
        "@typescript-eslint/no-use-before-define": "warn",
        "unused-imports/no-unused-vars": [
          "error",
          {
            "argsIgnorePattern": "^_"
          }
        ]
      }
    }
  ]
}
